from aiogram import Router, F
from aiogram.filters import CommandStart
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.state import StatesGroup, State
from aiogram.fsm.context import FSMContext
from requests import get_rating, get_titles
import keyboards as kb

router = Router()


class Initialization(StatesGroup):
    discipline = State()
    student = State()


@router.message(CommandStart())
async def command_start_handler(message: Message, state: FSMContext):
    await state.set_state(Initialization.discipline)
    await message.answer(f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.full_name}!\n"
                         "–Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –∏ –±–∞–ª–ª–∞–º –∑–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã.")
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É: ", reply_markup=await kb.inline_disciplines())


@router.callback_query(F.data == 'to_main')
async def main_board(callback: CallbackQuery, state: FSMContext):
    await state.set_state(Initialization.discipline)
    await callback.message.edit_text(f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É: ", reply_markup=await kb.inline_disciplines())


@router.callback_query(Initialization.discipline)
async def disciplines(callback: CallbackQuery, state: FSMContext):
    await state.update_data(discipline=callback.data)
    await callback.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É!")
    await state.set_state(Initialization.student)
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ: ", reply_markup=await kb.inline_students())


@router.callback_query(Initialization.student)
async def students(callback: CallbackQuery, state: FSMContext):
    await state.update_data(student=callback.data)
    await callback.answer("–í—ã –≤—ã–±—Ä–∞–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞!")
    data = await state.get_data()

    try:
        rating = await get_rating(data['discipline'].split('_')[1], data['student'].split('_')[1])
        titles = await get_titles(data['discipline'].split('_')[1], data['student'].split('_')[1])

        await callback.message.edit_text(f"üìä –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: {titles[0]}\n"
                                         f"üë§ –°—Ç—É–¥–µ–Ω—Ç: {titles[1]}\n"
                                         f"‚úî –ü–æ—Å–µ—â–µ–Ω–∏–µ: {rating.attendance}%\n"
                                         f"üíØ –ë–∞–ª–ª—ã –∑–∞ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—É: {rating.score}/100", reply_markup=kb.main_kb)
    except AttributeError:
        await callback.message.edit_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞...", reply_markup=kb.main_kb)

    await state.clear()


@router.message()
async def command_start_handler(message: Message):
    await message.answer(f"–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é... üòî\n"
                         f'–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–ª–∞–≤–Ω—É—é" –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start', reply_markup=kb.main_kb)
